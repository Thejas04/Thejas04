name: Generate Snake

# Controls when the action will run. This action runs every 6 hours.
on:
  schedule:
    # Every 6 hours
    - cron: "0 */6 * * *"
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Step 1: Checkout the repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Node.js environment (if needed by the snake generation tool)
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      # Step 3: Generate the snake GIF and SVG
      - name: Generate snake gif and svg
        id: snake-gif
        uses: Platane/snk@master
        with:
          github_user_name: Thejas04
          gif_out_path: dist/github-contribution-grid-snake.gif
          svg_out_path: dist/github-contribution-grid-snake.svg

      # Step 4: Show the status of the repository to help with debugging if there are any issues
      - name: Show git status
        run: git status

      # Step 5: Add and commit the generated files to the output branch
      - name: Commit generated files
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add dist/github-contribution-grid-snake.gif dist/github-contribution-grid-snake.svg
          git commit -m "Generate snake gif and svg"

      # Step 6: Push the changes to the output branch
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: output
          force: true

      # Step 7: Deploy the changes to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v2.1.3
        with:
          target_branch: output
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 8: Clean up the repository (optional but recommended for keeping the repository clean)
      - name: Cleanup repository
        run: |
          git reset --hard
          git clean -fdx
